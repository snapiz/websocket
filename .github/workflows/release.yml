name: "Release"

on:
  push:
    branches:
      - main

jobs:
  audit:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn audit

  release:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Create empty certs files
        run: mkdir certs && touch certs/tls.key && touch certs/tls.crt
      - name: Build react & server
        run: yarn build
      - name: Create react package
        run: mkdir react/build && cp -a react/dist react/build/ && cp react/package.json react/build/
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: npx semantic-release
